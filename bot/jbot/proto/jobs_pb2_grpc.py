# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import jobs_pb2 as jobs__pb2


class APIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/user.API/CreateUser',
                request_serializer=jobs__pb2.User.SerializeToString,
                response_deserializer=jobs__pb2.User.FromString,
                )
        self.GetUserByID = channel.unary_unary(
                '/user.API/GetUserByID',
                request_serializer=jobs__pb2.IDRequest.SerializeToString,
                response_deserializer=jobs__pb2.User.FromString,
                )
        self.GetAllUsers = channel.unary_unary(
                '/user.API/GetAllUsers',
                request_serializer=jobs__pb2.User.SerializeToString,
                response_deserializer=jobs__pb2.Users.FromString,
                )
        self.SetPhone = channel.unary_unary(
                '/user.API/SetPhone',
                request_serializer=jobs__pb2.SetPhoneRequest.SerializeToString,
                response_deserializer=jobs__pb2.Result.FromString,
                )
        self.GetOrCreateUser = channel.unary_unary(
                '/user.API/GetOrCreateUser',
                request_serializer=jobs__pb2.User.SerializeToString,
                response_deserializer=jobs__pb2.User.FromString,
                )
        self.CreateCity = channel.unary_unary(
                '/user.API/CreateCity',
                request_serializer=jobs__pb2.City.SerializeToString,
                response_deserializer=jobs__pb2.City.FromString,
                )
        self.GetOrCreateCity = channel.unary_unary(
                '/user.API/GetOrCreateCity',
                request_serializer=jobs__pb2.City.SerializeToString,
                response_deserializer=jobs__pb2.City.FromString,
                )
        self.GetAllCities = channel.unary_unary(
                '/user.API/GetAllCities',
                request_serializer=jobs__pb2.EmptyRequest.SerializeToString,
                response_deserializer=jobs__pb2.Cities.FromString,
                )
        self.CreateSkill = channel.unary_unary(
                '/user.API/CreateSkill',
                request_serializer=jobs__pb2.Skill.SerializeToString,
                response_deserializer=jobs__pb2.Skill.FromString,
                )
        self.GetAllSkills = channel.unary_unary(
                '/user.API/GetAllSkills',
                request_serializer=jobs__pb2.EmptyRequest.SerializeToString,
                response_deserializer=jobs__pb2.Skill.FromString,
                )
        self.CreateProfession = channel.unary_unary(
                '/user.API/CreateProfession',
                request_serializer=jobs__pb2.Profession.SerializeToString,
                response_deserializer=jobs__pb2.Profession.FromString,
                )
        self.GetAllProfessions = channel.unary_unary(
                '/user.API/GetAllProfessions',
                request_serializer=jobs__pb2.EmptyRequest.SerializeToString,
                response_deserializer=jobs__pb2.Professions.FromString,
                )
        self.CreateCV = channel.unary_unary(
                '/user.API/CreateCV',
                request_serializer=jobs__pb2.CV.SerializeToString,
                response_deserializer=jobs__pb2.CV.FromString,
                )
        self.UpdateCV = channel.unary_unary(
                '/user.API/UpdateCV',
                request_serializer=jobs__pb2.CV.SerializeToString,
                response_deserializer=jobs__pb2.CV.FromString,
                )
        self.GetAllCVs = channel.unary_unary(
                '/user.API/GetAllCVs',
                request_serializer=jobs__pb2.EmptyRequest.SerializeToString,
                response_deserializer=jobs__pb2.CVs.FromString,
                )
        self.GetCVByID = channel.unary_unary(
                '/user.API/GetCVByID',
                request_serializer=jobs__pb2.IDRequest.SerializeToString,
                response_deserializer=jobs__pb2.CV.FromString,
                )
        self.CreateAd = channel.unary_unary(
                '/user.API/CreateAd',
                request_serializer=jobs__pb2.Ad.SerializeToString,
                response_deserializer=jobs__pb2.Ad.FromString,
                )
        self.GetAllAds = channel.unary_unary(
                '/user.API/GetAllAds',
                request_serializer=jobs__pb2.EmptyRequest.SerializeToString,
                response_deserializer=jobs__pb2.Ads.FromString,
                )


class APIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPhone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrCreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrCreateCity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSkill(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllSkills(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProfession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllProfessions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCV(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCV(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCVs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCVByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllAds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_APIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=jobs__pb2.User.FromString,
                    response_serializer=jobs__pb2.User.SerializeToString,
            ),
            'GetUserByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByID,
                    request_deserializer=jobs__pb2.IDRequest.FromString,
                    response_serializer=jobs__pb2.User.SerializeToString,
            ),
            'GetAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUsers,
                    request_deserializer=jobs__pb2.User.FromString,
                    response_serializer=jobs__pb2.Users.SerializeToString,
            ),
            'SetPhone': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPhone,
                    request_deserializer=jobs__pb2.SetPhoneRequest.FromString,
                    response_serializer=jobs__pb2.Result.SerializeToString,
            ),
            'GetOrCreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrCreateUser,
                    request_deserializer=jobs__pb2.User.FromString,
                    response_serializer=jobs__pb2.User.SerializeToString,
            ),
            'CreateCity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCity,
                    request_deserializer=jobs__pb2.City.FromString,
                    response_serializer=jobs__pb2.City.SerializeToString,
            ),
            'GetOrCreateCity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrCreateCity,
                    request_deserializer=jobs__pb2.City.FromString,
                    response_serializer=jobs__pb2.City.SerializeToString,
            ),
            'GetAllCities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCities,
                    request_deserializer=jobs__pb2.EmptyRequest.FromString,
                    response_serializer=jobs__pb2.Cities.SerializeToString,
            ),
            'CreateSkill': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSkill,
                    request_deserializer=jobs__pb2.Skill.FromString,
                    response_serializer=jobs__pb2.Skill.SerializeToString,
            ),
            'GetAllSkills': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllSkills,
                    request_deserializer=jobs__pb2.EmptyRequest.FromString,
                    response_serializer=jobs__pb2.Skill.SerializeToString,
            ),
            'CreateProfession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProfession,
                    request_deserializer=jobs__pb2.Profession.FromString,
                    response_serializer=jobs__pb2.Profession.SerializeToString,
            ),
            'GetAllProfessions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllProfessions,
                    request_deserializer=jobs__pb2.EmptyRequest.FromString,
                    response_serializer=jobs__pb2.Professions.SerializeToString,
            ),
            'CreateCV': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCV,
                    request_deserializer=jobs__pb2.CV.FromString,
                    response_serializer=jobs__pb2.CV.SerializeToString,
            ),
            'UpdateCV': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCV,
                    request_deserializer=jobs__pb2.CV.FromString,
                    response_serializer=jobs__pb2.CV.SerializeToString,
            ),
            'GetAllCVs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCVs,
                    request_deserializer=jobs__pb2.EmptyRequest.FromString,
                    response_serializer=jobs__pb2.CVs.SerializeToString,
            ),
            'GetCVByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCVByID,
                    request_deserializer=jobs__pb2.IDRequest.FromString,
                    response_serializer=jobs__pb2.CV.SerializeToString,
            ),
            'CreateAd': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAd,
                    request_deserializer=jobs__pb2.Ad.FromString,
                    response_serializer=jobs__pb2.Ad.SerializeToString,
            ),
            'GetAllAds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllAds,
                    request_deserializer=jobs__pb2.EmptyRequest.FromString,
                    response_serializer=jobs__pb2.Ads.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.API', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class API(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/CreateUser',
            jobs__pb2.User.SerializeToString,
            jobs__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetUserByID',
            jobs__pb2.IDRequest.SerializeToString,
            jobs__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetAllUsers',
            jobs__pb2.User.SerializeToString,
            jobs__pb2.Users.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPhone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/SetPhone',
            jobs__pb2.SetPhoneRequest.SerializeToString,
            jobs__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrCreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetOrCreateUser',
            jobs__pb2.User.SerializeToString,
            jobs__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/CreateCity',
            jobs__pb2.City.SerializeToString,
            jobs__pb2.City.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrCreateCity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetOrCreateCity',
            jobs__pb2.City.SerializeToString,
            jobs__pb2.City.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetAllCities',
            jobs__pb2.EmptyRequest.SerializeToString,
            jobs__pb2.Cities.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSkill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/CreateSkill',
            jobs__pb2.Skill.SerializeToString,
            jobs__pb2.Skill.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllSkills(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetAllSkills',
            jobs__pb2.EmptyRequest.SerializeToString,
            jobs__pb2.Skill.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProfession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/CreateProfession',
            jobs__pb2.Profession.SerializeToString,
            jobs__pb2.Profession.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllProfessions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetAllProfessions',
            jobs__pb2.EmptyRequest.SerializeToString,
            jobs__pb2.Professions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/CreateCV',
            jobs__pb2.CV.SerializeToString,
            jobs__pb2.CV.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCV(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/UpdateCV',
            jobs__pb2.CV.SerializeToString,
            jobs__pb2.CV.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCVs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetAllCVs',
            jobs__pb2.EmptyRequest.SerializeToString,
            jobs__pb2.CVs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCVByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetCVByID',
            jobs__pb2.IDRequest.SerializeToString,
            jobs__pb2.CV.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/CreateAd',
            jobs__pb2.Ad.SerializeToString,
            jobs__pb2.Ad.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllAds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.API/GetAllAds',
            jobs__pb2.EmptyRequest.SerializeToString,
            jobs__pb2.Ads.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
